
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    // Checks if a user has a specific role by reading their profile.
    function isRole(role) {
      // Ensure user is authenticated before trying to read their profile.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Checks if the user is any kind of manager (PIC, Admin, MasterAdmin).
    function isManager() {
      if (request.auth == null) {
        return false;
      }
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return userRole == 'PIC' || userRole == 'Admin' || userRole == 'MasterAdmin';
    }

    // COLLECTION RULES
    match /users/{userId} {
      // Any authenticated user can read any other user's profile.
      // This is necessary for pages like "Manage Kurir" where a PIC needs to see a list of couriers.
      allow read: if request.auth != null;
      
      // A user can update their own profile (e.g., from the settings page).
      // MasterAdmin can also update any profile.
      allow update: if request.auth.uid == userId || isRole('MasterAdmin');

      // Creation/deletion is handled by secure backend functions, not allowed from the client.
      allow create, delete: if false;
    }

    match /attendance/{attendanceId} {
      // Kurir can read their own records.
      // Managers can read all attendance records for their dashboard/reports.
      allow read: if (request.auth.uid == resource.data.kurirUid) || isManager();

      // Only the specific Kurir can create or update their own attendance record.
      allow create, update: if request.resource.data.kurirUid == request.auth.uid;

      // Deletion is not allowed from the client.
      allow delete: if false;
    }

    match /kurir_daily_tasks/{taskId} {
      // Kurir can read their own tasks.
      // Managers can read all tasks for their dashboard/reports.
      allow read: if (request.auth.uid == resource.data.kurirUid) || isManager();
      
      // Only the specific Kurir can create or update their own task document.
      allow create, update: if request.resource.data.kurirUid == request.auth.uid;
      
      // Deletion is not allowed from the client.
      allow delete: if false;
      
      // Subcollection for packages within a task.
      match /packages/{packageId} {
        // The rules for packages depend on who owns the parent task document.
        function taskOwnerUid() {
            return get(/databases/$(database)/documents/kurir_daily_tasks/$(taskId)).data.kurirUid;
        }

        // The task owner or a manager can read the packages.
        allow read: if (request.auth.uid == taskOwnerUid()) || isManager();
        
        // Only the task owner can write (create, update, delete) packages.
        allow write: if request.auth.uid == taskOwnerUid();
      }
    }
    
    match /approval_requests/{requestId} {
      // MasterAdmin can read all requests.
      // An Admin can read a request if they were the one who submitted it.
      allow read: if isRole('MasterAdmin') || (isRole('Admin') && request.auth.uid == resource.data.requestedByUid);
      
      // Only Admins can create new approval requests.
      allow create: if isRole('Admin');
      
      // Updates and deletions are handled by secure backend functions only.
      allow update, delete: if false;
    }
    
    match /notifications/{notificationId} {
        // Only MasterAdmins can see system-wide notifications.
        allow read, update: if isRole('MasterAdmin');
        
        // Creation and deletion are not for clients.
        allow create, delete: if false;
    }
  }
}
