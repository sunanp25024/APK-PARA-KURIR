
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all. A rule must be explicitly set for any collection to be accessible.
    match /{document=**} {
      allow read, write: if false;
    }
    
    // USER collection rules
    match /users/{userId} {
      // Any authenticated user can read their own profile.
      allow get: if request.auth.uid == userId;
      
      // Managers can read any user's profile for management purposes.
      allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['MasterAdmin', 'Admin', 'PIC'];
      
      // Only MasterAdmin can create, update, or delete user documents directly.
      // Admin actions must go through the approval_requests collection.
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'MasterAdmin';
    }
    
    // APPROVAL REQUESTS collection rules
    match /approval_requests/{requestId} {
      // MasterAdmin has full read/write access to all requests.
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'MasterAdmin';

      // An Admin can create a request...
      allow create: 
        // ...if they are authenticated as an Admin...
        if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin'
        // ...and the request they are creating is marked with their own UID.
        && request.resource.data.requestedByUid == request.auth.uid;

      // An Admin can read requests...
      allow read: 
        // ...if they are authenticated as an Admin...
        if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin'
        // ...and the request being read belongs to them.
        // This rule works for both GET (single doc) and LIST (query),
        // as long as the client-side query includes `where('requestedByUid', '==', auth.uid)`.
        && resource.data.requestedByUid == request.auth.uid;
    }
    
    // ATTENDANCE collection rules
    match /attendance/{attendanceId} {
      // Kurir can create and update their OWN attendance record.
      allow create, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Kurir'
                          && request.resource.data.kurirUid == request.auth.uid;
      
      // Kurir can read their own attendance records.
      // Managers can read any attendance record.
      allow read: if (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Kurir'
                    && resource.data.kurirUid == request.auth.uid)
                  || (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['PIC', 'Admin', 'MasterAdmin']);
    }

    // KURIR DAILY TASKS collection and subcollections
    match /kurir_daily_tasks/{taskId} {
      // Kurir can create/update their own task document.
      allow create, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Kurir'
                           && request.resource.data.kurirUid == request.auth.uid;

      // Kurir can read their own task documents.
      // Managers can read any task document.
      allow read: if (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Kurir'
                    && resource.data.kurirUid == request.auth.uid)
                  || (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['PIC', 'Admin', 'MasterAdmin']);

      // PACKAGES subcollection
      match /packages/{packageId} {
        // Kurir who owns the parent task can manage packages.
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Kurir'
                          && get(/databases/$(database)/documents/kurir_daily_tasks/$(taskId)).data.kurirUid == request.auth.uid;
      }
    }
    
    // NOTIFICATIONS collection (MasterAdmin only)
    match /notifications/{notificationId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'MasterAdmin';
    }
  }
}
