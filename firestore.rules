
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Users Collection ---
    // Security for user profile documents.
    match /users/{userId} {
      // Any authenticated user can read any profile.
      // This is safe because the UI controls who can see lists of users.
      // This also simplifies rules that need to check a user's role and prevents recursion.
      allow read: if request.auth != null;

      // Only MasterAdmins can create, update, or delete users directly.
      // Admins must use the approval request flow.
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'MasterAdmin';
    }

    // --- Approval Requests Collection ---
    // Security for approval request documents.
    match /approval_requests/{requestId} {
      // MasterAdmins can read any request.
      // Admins can only read requests they created themselves.
      // This rule covers both GET and LIST operations.
      allow read: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'MasterAdmin' ||
        resource.data.requestedByUid == request.auth.uid
      );

      // Admins and MasterAdmins can create requests for themselves.
      allow create: if request.auth != null &&
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'MasterAdmin'] &&
                     request.resource.data.requestedByUid == request.auth.uid;

      // Only MasterAdmins can update (approve/reject) a request.
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'MasterAdmin';

      // Deleting requests is not allowed to maintain audit trails.
      allow delete: if false;
    }

    // --- Attendance Collection ---
    // Security for courier attendance records.
    match /attendance/{attendanceId} {
      // PICs, Admins, and MasterAdmins can read any attendance record.
      // A Kurir can only read their own records.
      allow read: if request.auth != null &&
                   (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['PIC', 'Admin', 'MasterAdmin'] ||
                    resource.data.kurirUid == request.auth.uid);

      // Only a Kurir can create or update their own attendance record.
      allow write: if request.auth != null &&
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Kurir' &&
                    request.resource.data.kurirUid == request.auth.uid;
    }

    // --- Courier Daily Tasks Collection & Sub-collections ---
    // Security for daily work documents.
    match /kurir_daily_tasks/{taskId} {
      // Managers can read any task. Kurir can only read their own.
      allow read: if request.auth != null &&
                   (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['PIC', 'Admin', 'MasterAdmin'] ||
                    resource.data.kurirUid == request.auth.uid);

      // Only the assigned Kurir can write to their own task document.
      allow write: if request.auth != null &&
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Kurir' &&
                    get(/databases/$(database)/documents/kurir_daily_tasks/$(taskId)).data.kurirUid == request.auth.uid;

      // Security for the 'packages' sub-collection within a task.
      match /packages/{packageId} {
        // Only the Kurir who owns the parent task document can access its packages.
        allow read, write: if request.auth != null &&
                            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Kurir' &&
                            get(/databases/$(database)/documents/kurir_daily_tasks/$(taskId)).data.kurirUid == request.auth.uid;
      }
    }

    // --- Notifications Collection ---
    // Security for system notifications.
    match /notifications/{notificationId} {
      // Only MasterAdmins can read or write notifications.
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'MasterAdmin';
    }
  }
}
